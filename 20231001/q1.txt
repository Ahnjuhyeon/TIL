
1. Props
-> 프롭스는 언제 전달 해야할까요? 구체적인 예시를 들어서 설명해주세요.
-> 나의 기준으로 컴포넌트를 생성했을 때 현재 컴포넌트 안에 데이터가 없어요
상위(부모) 컴포넌트에 데이터가 있을 때

ex) 오늘의 집에서 상품카드 컴포넌트를 생성
-> 사이즈가 다르다? -> 사이즈를 전달받아서 사용
-> 컴포넌트를 구성할 때 -> 내가 현재 구성해야할 데이터가 없으면
-> 재사용

ex) 페이지네이션을 구현한다 했을 때 실제 컴포넌트 안에다가
totalPage = 20이라고 기본값으로 설정
30,50,60인 곳에서는 재사용 불가능

props로 전달받아서 부모와 상관없이 어떠한 컴포넌트에서 사용될 수 있도록

1. 컴포넌트 구성 -> 내가 써야하는 데이터가 부모에 있네? -> props
2. 이 컴포넌트는 어디서든 재사용해야해 외부에 데이터 값에 의존 -> props
(안에다가 기본값으로 박지마!!!)

-----------------------------------------------------------------


2. Hooks 함수
->
1. useState
-> 초기에 상태 값, 그 상태 값을 변경, 상태를 바꿀 때
-> 상태란?
리랜더링 -> 상태가 바뀌었을 때만 해당 컴포넌트를 리랜더(함수를 재실행)
상태 -> UI를 바꾸는 것
-> 내가 원하는 시점에 UI 변경

[함수 재실행]
함수 내부의 선언된 값을 다시 선언, 쓰레기 수집가가 주워갔기에 없는 값이 되었음

function f1() {
let a = 5;
const f2 = () => {
}

a++
return a
}

console.log(f1()) // 6
console.log(f1()) // 7(x) -> 6

2. useRef
-> 정확히는? 접근할 때 사용
-> 랜더되었을 때도 값이 유지, 원래라면 함수가 재실행되면서 선언을 다시 해야하지만
이런 특성이용해서 DOM API(html tags)에 접근 가능

3. useEffect
-> effect -> 효과
-> 효과를 다루는 훅함수, 사이트의 생명주기(시작과 끝)
-> 생명 주기 동안 실행되는 효과를 다루는 훅함수 -> useEffect
-> 효과 = 함수
-> 페이지가 처음 실행되었어 -> 실행하고 싶은 함수 (backend posts) -> useEffect
ex)
useEffect(()=>{

},[]) <-- 의존성 배열 비워놓으면 -> 페이지 처음 열렸을 때 실행

-> 페이지가 실행 중일 때 특정한 값이 바뀌었을 때 실행하고 싶은 함수
ex)
state -> 비동기 -> 시간이 걸리는 함수를 동시에 실행

const [count, setCount] = useState(5)

const onClick = () => {
setCount(count + 1)
console.log(count) // 5
=> 나는 6을 쓰고 싶은데? 절대 못써
=> state는 비동기라서 동기적인 함수가 모두 실행되고 나서 실행
}

useEffect(()=>{
...
console.log(count) // 6
},[count]) <--- []안에 값이 바뀌었을 때 실행

---

useEffect(()=> {
...
},[a.length, typeof user])


페이지가 실행 중일 때 특정한 값이 바뀌었으면 이런 함수가 실행되었으면 좋겠어
=> 특정 값이 바뀔 때마다 이 함수가 실행되어야해!!

-> 페이지가(컴포넌트) 종료되었을 떄
useEffect(()=>{
a.addEventListener() // 컴포넌트가 처음 나타났을 때

return () => {
a.removeEventListener()
... 컴포넌트가 사라졌을 떄
}
},[])

=> useEffect 페이지가 실행되는 동안 (시작, 실행중, 끝)동안 내가 원하는 상황에
특정한 effect(함수)를 실행하기 위해서쓰는 훅함수

단, setState는 비동기 함수 이기 때문에 해당 상태가 바뀌고 나서 특정 함수를
실행해야할 때도 사용할 수 있다 (비동기인 setState 이후의 실행문을 동기적으로 실행하기위해서)

Promise.then(()=>{
...Promise가 끝나고 나서 실행
})

-------------------------------------------------------------------------

4. useMemo
-> 값을 캐싱, 제가 원할 때 꺼내쓸 수 있음

5. useCallback
-> 잘 이해 못했어요

-----------------------------------------------------------------
---
과제
1. props 과제

(1). 부모에 있는 데이터를 전달받기 위해서 props가 전달되는 예시 하나 만들어오기 (map)
(2). 재사용 되는 값을 props로 전달해서 사용할 수 있는 에시 하나 만들어오기 ( button, pageNation처럼 )


2. hook 함수 설명 -> 예시 하나씩 만들어와요, 어떤 특성을 이용해서 예시를 만들었는지 반드시 정의
(1). useRef를 활용해서 타이머 만들어오기
start 누르면 1초씩 증가
stop 누르면 멈춤
start 다시 누르면 실행
reset 초기화
--> 너무 어려우면 줄넘기 문제 풀기

(2). useEffect(()=>,[])
2-1) 특정 모달(컴포넌트)이 생성되었을 때 console
2-2) 특정 모달이 꺼졌을 때 console —> 의존성 배열에 값이 있으면 안됨 (컴포넌트 시작, 끝)

특정 모달은 아래 조건에 의해서 생성

const [isOpenModal, setIsOpenModal] = useState(false)
const onOpenModal = () => {
setIsOpenModal(true)
setIsOpenModal(prev => !prev)
}

